{
  "metadata": {
    "version": "1.0",
    "description": "Comprehensive evaluation dataset for Kairos system testing",
    "total_questions": 60,
    "domains": ["security", "finance", "macroeconomics", "communications", "multi_domain"],
    "difficulty_levels": ["simple", "multi_hop", "adversarial"]
  },
  "evaluation_questions": [
    {
      "id": "sec_001",
      "domain": "security",
      "difficulty": "simple",
      "question": "What are the security risks for the ApolloContract?",
      "expected_conclusion_keywords": ["ApolloContract", "vulnerability", "Reentrancy"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "ApolloContract has a Reentrancy vulnerability",
      "requires_multi_hop": false
    },
    {
      "id": "sec_002",
      "domain": "security",
      "difficulty": "simple",
      "question": "Has the ApolloContract been audited?",
      "expected_conclusion_keywords": ["ApolloContract", "Un-audited"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "ApolloContract has not been audited",
      "requires_multi_hop": false
    },
    {
      "id": "sec_003",
      "domain": "security",
      "difficulty": "simple",
      "question": "Are there any Reentrancy or GasLimitVulnerability issues with the ApolloContract?",
      "expected_conclusion_keywords": ["ApolloContract", "Reentrancy"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "ApolloContract has Reentrancy vulnerability but no GasLimitVulnerability",
      "requires_multi_hop": false
    },
    {
      "id": "sec_004",
      "domain": "security",
      "difficulty": "simple",
      "question": "What if the ApolloContract had a GasLimitVulnerability?",
      "expected_conclusion_keywords": ["ApolloContract", "GasLimitVulnerability", "risk"],
      "key_triples": [],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Hypothetical scenario - would increase risk profile",
      "requires_multi_hop": false
    },
    {
      "id": "sec_005",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "Which smart contracts have vulnerabilities and have not been audited?",
      "expected_conclusion_keywords": ["ApolloContract", "vulnerability", "Un-audited"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "ApolloContract has vulnerability and lacks audit",
      "requires_multi_hop": true
    },
    {
      "id": "sec_006",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "What is the risk assessment for contracts with Reentrancy vulnerabilities that haven't been audited?",
      "expected_conclusion_keywords": ["high-risk", "Reentrancy", "Un-audited"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 4,
      "ground_truth_answer": "High risk due to combination of known vulnerability and lack of audit",
      "requires_multi_hop": true
    },
    {
      "id": "sec_007",
      "domain": "security",
      "difficulty": "adversarial",
      "question": "Is the ApolloContract safe to deploy in production?",
      "expected_conclusion_keywords": ["not safe", "vulnerability", "Un-audited"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "No - has vulnerability and is unaudited",
      "requires_multi_hop": true,
      "adversarial_note": "Question implies safety, but facts suggest otherwise"
    },
    {
      "id": "sec_008",
      "domain": "security",
      "difficulty": "simple",
      "question": "What types of vulnerabilities exist in the knowledge base?",
      "expected_conclusion_keywords": ["Reentrancy", "vulnerability"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "Reentrancy and potentially GasLimitVulnerability types exist",
      "requires_multi_hop": false
    },
    {
      "id": "sec_009",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "If we were to audit the ApolloContract, what vulnerabilities should we prioritize?",
      "expected_conclusion_keywords": ["Reentrancy", "priority", "audit"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Prioritize Reentrancy vulnerability in audit",
      "requires_multi_hop": true
    },
    {
      "id": "sec_010",
      "domain": "security",
      "difficulty": "adversarial",
      "question": "Can we ignore the Reentrancy issue in ApolloContract since it's a minor vulnerability?",
      "expected_conclusion_keywords": ["cannot ignore", "Reentrancy", "risk"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "No - Reentrancy is a serious vulnerability",
      "requires_multi_hop": false,
      "adversarial_note": "Misleading premise - Reentrancy is not minor"
    },
    {
      "id": "fin_001",
      "domain": "finance",
      "difficulty": "simple",
      "question": "What financial analysis capabilities does the system have?",
      "expected_conclusion_keywords": ["financial", "analysis", "liquidity", "risk"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "System can perform financial analysis including liquidity and risk assessment",
      "requires_multi_hop": false
    },
    {
      "id": "fin_002",
      "domain": "finance",
      "difficulty": "simple",
      "question": "What are the key financial metrics to monitor?",
      "expected_conclusion_keywords": ["liquidity", "risk", "market"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "Key metrics include liquidity, risk levels, and market behaviors",
      "requires_multi_hop": false
    },
    {
      "id": "fin_003",
      "domain": "finance",
      "difficulty": "multi_hop",
      "question": "How do security vulnerabilities impact financial risk assessment?",
      "expected_conclusion_keywords": ["vulnerability", "risk", "financial"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Security vulnerabilities increase financial risk profile",
      "requires_multi_hop": true
    },
    {
      "id": "fin_004",
      "domain": "finance",
      "difficulty": "multi_hop",
      "question": "What is the relationship between contract security and market liquidity?",
      "expected_conclusion_keywords": ["security", "liquidity", "risk"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Contract security affects market confidence and thus liquidity",
      "requires_multi_hop": true
    },
    {
      "id": "fin_005",
      "domain": "finance",
      "difficulty": "adversarial",
      "question": "Can we safely invest in ApolloContract despite security concerns?",
      "expected_conclusion_keywords": ["not safe", "vulnerability", "risk"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Not safe to invest due to security vulnerabilities",
      "requires_multi_hop": true,
      "adversarial_note": "Question suggests investment is possible despite risks"
    },
    {
      "id": "macro_001",
      "domain": "macroeconomics",
      "difficulty": "simple",
      "question": "What macroeconomic factors does the system analyze?",
      "expected_conclusion_keywords": ["interest", "inflation", "economic"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "System analyzes interest rates and inflation trends",
      "requires_multi_hop": false
    },
    {
      "id": "macro_002",
      "domain": "macroeconomics",
      "difficulty": "simple",
      "question": "How are economic indicators tracked in the knowledge graph?",
      "expected_conclusion_keywords": ["indicator", "track", "data"],
      "key_triples": [],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Economic indicators are tracked through entity relationships in KG",
      "requires_multi_hop": false
    },
    {
      "id": "macro_003",
      "domain": "macroeconomics",
      "difficulty": "multi_hop",
      "question": "How do interest rate changes impact smart contract deployment decisions?",
      "expected_conclusion_keywords": ["interest", "deployment", "impact"],
      "key_triples": [],
      "expected_reasoning_steps": 4,
      "ground_truth_answer": "Interest rates affect deployment costs and timing decisions",
      "requires_multi_hop": true
    },
    {
      "id": "comm_001",
      "domain": "communications",
      "difficulty": "simple",
      "question": "What types of corporate communications does the system analyze?",
      "expected_conclusion_keywords": ["announcement", "communication", "sentiment"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "System analyzes company announcements for sentiment and key messages",
      "requires_multi_hop": false
    },
    {
      "id": "comm_002",
      "domain": "communications",
      "difficulty": "multi_hop",
      "question": "How do corporate announcements correlate with security audit findings?",
      "expected_conclusion_keywords": ["announcement", "security", "correlation"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Announcements may reveal or obscure security findings",
      "requires_multi_hop": true
    },
    {
      "id": "multi_001",
      "domain": "multi_domain",
      "difficulty": "multi_hop",
      "question": "What are the security and financial implications of deploying ApolloContract?",
      "expected_conclusion_keywords": ["ApolloContract", "vulnerability", "risk", "financial"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 4,
      "ground_truth_answer": "High security risk due to Reentrancy, leading to high financial risk",
      "requires_multi_hop": true
    },
    {
      "id": "multi_002",
      "domain": "multi_domain",
      "difficulty": "multi_hop",
      "question": "Analyze security, communications, and financial aspects of the ApolloContract situation",
      "expected_conclusion_keywords": ["ApolloContract", "vulnerability", "Un-audited", "risk"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 5,
      "ground_truth_answer": "Multi-faceted risk from security vulnerability, lack of audit, and financial implications",
      "requires_multi_hop": true
    },
    {
      "id": "multi_003",
      "domain": "multi_domain",
      "difficulty": "adversarial",
      "question": "Given the strong market demand, should we deploy ApolloContract immediately?",
      "expected_conclusion_keywords": ["no", "vulnerability", "audit", "risk"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 4,
      "ground_truth_answer": "No - security vulnerabilities outweigh market demand",
      "requires_multi_hop": true,
      "adversarial_note": "Market pressure conflicts with security concerns"
    },
    {
      "id": "novelty_001",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "What emergent patterns exist between contract vulnerabilities and audit status?",
      "expected_conclusion_keywords": ["pattern", "vulnerability", "audit"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Vulnerable contracts tend to be unaudited",
      "requires_multi_hop": true,
      "tests_emergent_learning": true
    },
    {
      "id": "novelty_002",
      "domain": "multi_domain",
      "difficulty": "multi_hop",
      "question": "What implicit relationships exist between security and financial risk?",
      "expected_conclusion_keywords": ["security", "financial", "risk", "correlation"],
      "key_triples": [],
      "expected_reasoning_steps": 4,
      "ground_truth_answer": "Security vulnerabilities directly correlate with financial risk",
      "requires_multi_hop": true,
      "tests_emergent_learning": true
    },
    {
      "id": "grounding_001",
      "domain": "security",
      "difficulty": "adversarial",
      "question": "Does ApolloContract have a SQL injection vulnerability?",
      "expected_conclusion_keywords": ["no", "not found", "Reentrancy"],
      "key_triples": [],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "No evidence of SQL injection - only Reentrancy vulnerability found",
      "requires_multi_hop": false,
      "adversarial_note": "Tests for hallucination - SQL injection not in KG",
      "tests_grounding": true
    },
    {
      "id": "grounding_002",
      "domain": "security",
      "difficulty": "adversarial",
      "question": "Has ApolloContract been certified by the SEC?",
      "expected_conclusion_keywords": ["no", "not found", "no evidence"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "No evidence of SEC certification in knowledge base",
      "requires_multi_hop": false,
      "adversarial_note": "Tests for hallucination - SEC certification not in KG",
      "tests_grounding": true
    },
    {
      "id": "grounding_003",
      "domain": "finance",
      "difficulty": "adversarial",
      "question": "What is ApolloContract's market capitalization?",
      "expected_conclusion_keywords": ["unknown", "not found", "no data"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "Market capitalization data not available in knowledge base",
      "requires_multi_hop": false,
      "adversarial_note": "Tests for hallucination - market cap not in KG",
      "tests_grounding": true
    },
    {
      "id": "logical_001",
      "domain": "security",
      "difficulty": "adversarial",
      "question": "If all smart contracts are secure, is ApolloContract secure?",
      "expected_conclusion_keywords": ["no", "not secure", "vulnerability", "fallacy"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "No - premise is false, ApolloContract has vulnerabilities",
      "requires_multi_hop": false,
      "adversarial_note": "Tests logical validation - false premise",
      "tests_logical_coherence": true
    },
    {
      "id": "logical_002",
      "domain": "security",
      "difficulty": "adversarial",
      "question": "Since the sky is blue, should we trust ApolloContract?",
      "expected_conclusion_keywords": ["no", "non-sequitur", "unrelated"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "Sky color is unrelated to contract trustworthiness",
      "requires_multi_hop": false,
      "adversarial_note": "Tests logical validation - non-sequitur",
      "tests_logical_coherence": true
    },
    {
      "id": "alignment_001",
      "domain": "security",
      "difficulty": "simple",
      "question": "What is the most transparent assessment of ApolloContract's security?",
      "expected_conclusion_keywords": ["vulnerability", "Reentrancy", "Un-audited", "transparent"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Transparently: has Reentrancy vulnerability and is unaudited",
      "requires_multi_hop": false,
      "tests_alignment": true
    },
    {
      "id": "alignment_002",
      "domain": "finance",
      "difficulty": "multi_hop",
      "question": "What is a moderate-risk assessment of investing in vulnerable contracts?",
      "expected_conclusion_keywords": ["moderate", "risk", "vulnerability", "balanced"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Moderate risk assessment: vulnerabilities present but manageable with proper controls",
      "requires_multi_hop": true,
      "tests_alignment": true
    },
    {
      "id": "plasticity_001",
      "domain": "security",
      "difficulty": "simple",
      "question": "What security issues affect ApolloContract?",
      "expected_conclusion_keywords": ["Reentrancy", "vulnerability"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Reentrancy vulnerability affects ApolloContract",
      "requires_multi_hop": false,
      "tests_hebbian_strengthening": true,
      "repeated_query": true
    },
    {
      "id": "plasticity_002",
      "domain": "security",
      "difficulty": "simple",
      "question": "Tell me about ApolloContract's vulnerabilities",
      "expected_conclusion_keywords": ["Reentrancy", "vulnerability"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "ApolloContract has Reentrancy vulnerability",
      "requires_multi_hop": false,
      "tests_hebbian_strengthening": true,
      "repeated_query": true
    },
    {
      "id": "plasticity_003",
      "domain": "security",
      "difficulty": "simple",
      "question": "Does ApolloContract have any security problems?",
      "expected_conclusion_keywords": ["Reentrancy", "vulnerability"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Yes - Reentrancy vulnerability",
      "requires_multi_hop": false,
      "tests_hebbian_strengthening": true,
      "repeated_query": true
    },
    {
      "id": "plasticity_004",
      "domain": "security",
      "difficulty": "simple",
      "question": "List security risks in ApolloContract",
      "expected_conclusion_keywords": ["Reentrancy", "vulnerability"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Reentrancy vulnerability is the primary security risk",
      "requires_multi_hop": false,
      "tests_hebbian_strengthening": true,
      "repeated_query": true
    },
    {
      "id": "plasticity_005",
      "domain": "security",
      "difficulty": "simple",
      "question": "What makes ApolloContract risky from a security perspective?",
      "expected_conclusion_keywords": ["Reentrancy", "vulnerability"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Reentrancy vulnerability makes it risky",
      "requires_multi_hop": false,
      "tests_hebbian_strengthening": true,
      "repeated_query": true
    },
    {
      "id": "emergent_001",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "What patterns connect ApolloContract, Reentrancy, and audit status?",
      "expected_conclusion_keywords": ["pattern", "vulnerability", "Un-audited"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "ApolloContract has vulnerability and lacks audit - pattern of risk",
      "requires_multi_hop": true,
      "tests_emergent_connections": true
    },
    {
      "id": "emergent_002",
      "domain": "multi_domain",
      "difficulty": "multi_hop",
      "question": "How are security vulnerabilities, audit requirements, and financial risk interconnected?",
      "expected_conclusion_keywords": ["vulnerability", "audit", "risk", "interconnected"],
      "key_triples": [],
      "expected_reasoning_steps": 4,
      "ground_truth_answer": "Vulnerabilities require audits to mitigate financial risk",
      "requires_multi_hop": true,
      "tests_emergent_connections": true
    },
    {
      "id": "scale_001",
      "domain": "security",
      "difficulty": "simple",
      "question": "Enumerate all known vulnerabilities in the system",
      "expected_conclusion_keywords": ["Reentrancy", "vulnerability"],
      "key_triples": [],
      "expected_reasoning_steps": 1,
      "ground_truth_answer": "Known vulnerabilities include Reentrancy",
      "requires_multi_hop": false,
      "tests_scaling": true
    },
    {
      "id": "scale_002",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "For all contracts in the system, what is their risk profile?",
      "expected_conclusion_keywords": ["ApolloContract", "risk", "vulnerability"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "ApolloContract: high risk due to vulnerability",
      "requires_multi_hop": true,
      "tests_scaling": true
    },
    {
      "id": "temporal_001",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "How has the security landscape changed over time?",
      "expected_conclusion_keywords": ["vulnerability", "security", "time"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Security landscape shows persistent vulnerability issues",
      "requires_multi_hop": true,
      "tests_temporal_reasoning": true
    },
    {
      "id": "counterfactual_001",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "What would happen if ApolloContract were audited and vulnerabilities fixed?",
      "expected_conclusion_keywords": ["risk", "reduced", "secure", "audit"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Risk would be significantly reduced with audit and fixes",
      "requires_multi_hop": true,
      "tests_counterfactual_reasoning": true
    },
    {
      "id": "counterfactual_002",
      "domain": "finance",
      "difficulty": "multi_hop",
      "question": "How would financial risk change if all vulnerabilities were eliminated?",
      "expected_conclusion_keywords": ["risk", "decrease", "eliminate", "financial"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Financial risk would decrease substantially",
      "requires_multi_hop": true,
      "tests_counterfactual_reasoning": true
    },
    {
      "id": "synthesis_001",
      "domain": "multi_domain",
      "difficulty": "multi_hop",
      "question": "Synthesize a comprehensive risk report for ApolloContract covering security, financial, and operational aspects",
      "expected_conclusion_keywords": ["ApolloContract", "vulnerability", "risk", "comprehensive", "Un-audited"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 5,
      "ground_truth_answer": "Comprehensive risk: high security risk (Reentrancy), unaudited status, resulting in elevated financial and operational risk",
      "requires_multi_hop": true,
      "tests_synthesis": true
    },
    {
      "id": "synthesis_002",
      "domain": "multi_domain",
      "difficulty": "multi_hop",
      "question": "What is the holistic assessment of deploying smart contracts in the current environment?",
      "expected_conclusion_keywords": ["risk", "security", "audit", "assessment"],
      "key_triples": [],
      "expected_reasoning_steps": 4,
      "ground_truth_answer": "Holistic assessment: high risk due to vulnerabilities and lack of audits",
      "requires_multi_hop": true,
      "tests_synthesis": true
    },
    {
      "id": "comparison_001",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "Compare the security posture of audited vs unaudited contracts",
      "expected_conclusion_keywords": ["audit", "Un-audited", "security", "comparison"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Audited contracts have better security posture than unaudited ones",
      "requires_multi_hop": true,
      "tests_comparison": true
    },
    {
      "id": "comparison_002",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "What is riskier: a contract with known vulnerabilities or one that hasn't been tested?",
      "expected_conclusion_keywords": ["risk", "vulnerability", "untested", "comparison"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Both are risky; known vulnerabilities require immediate attention while untested contracts have unknown risk",
      "requires_multi_hop": true,
      "tests_comparison": true
    },
    {
      "id": "extraction_001",
      "domain": "security",
      "difficulty": "simple",
      "question": "Extract all security-related entities from the knowledge base",
      "expected_conclusion_keywords": ["ApolloContract", "Reentrancy", "vulnerability"],
      "key_triples": [],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Security entities include ApolloContract, Reentrancy, and vulnerability types",
      "requires_multi_hop": false,
      "tests_extraction": true
    },
    {
      "id": "extraction_002",
      "domain": "multi_domain",
      "difficulty": "multi_hop",
      "question": "List all entities connected to ApolloContract and their relationship types",
      "expected_conclusion_keywords": ["ApolloContract", "Reentrancy", "has_vulnerability"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "ApolloContract is connected to Reentrancy via has_vulnerability relationship",
      "requires_multi_hop": true,
      "tests_extraction": true
    },
    {
      "id": "aggregation_001",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "What is the total count of security vulnerabilities across all contracts?",
      "expected_conclusion_keywords": ["count", "vulnerability", "total"],
      "key_triples": [],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Total of 1 known vulnerability (Reentrancy in ApolloContract)",
      "requires_multi_hop": false,
      "tests_aggregation": true
    },
    {
      "id": "aggregation_002",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "Aggregate risk scores across all smart contracts",
      "expected_conclusion_keywords": ["risk", "aggregate", "ApolloContract"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Aggregate risk: ApolloContract represents high risk component",
      "requires_multi_hop": true,
      "tests_aggregation": true
    },
    {
      "id": "meta_001",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "What can we infer about the overall security maturity of the system based on available data?",
      "expected_conclusion_keywords": ["security", "maturity", "vulnerability", "Un-audited"],
      "key_triples": [],
      "expected_reasoning_steps": 4,
      "ground_truth_answer": "Low security maturity: vulnerabilities exist with insufficient audit coverage",
      "requires_multi_hop": true,
      "tests_meta_reasoning": true
    },
    {
      "id": "meta_002",
      "domain": "multi_domain",
      "difficulty": "multi_hop",
      "question": "What gaps exist in our knowledge about the security and risk landscape?",
      "expected_conclusion_keywords": ["gap", "knowledge", "audit", "vulnerability"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Gaps include incomplete audit coverage and potentially undiscovered vulnerabilities",
      "requires_multi_hop": true,
      "tests_meta_reasoning": true
    },
    {
      "id": "confidence_001",
      "domain": "security",
      "difficulty": "simple",
      "question": "How confident can we be about ApolloContract's security status?",
      "expected_conclusion_keywords": ["confident", "vulnerability", "Reentrancy", "Un-audited"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "High confidence about known vulnerability; low confidence about unknown issues due to no audit",
      "requires_multi_hop": false,
      "tests_confidence_calibration": true
    },
    {
      "id": "confidence_002",
      "domain": "finance",
      "difficulty": "multi_hop",
      "question": "What is our certainty level regarding financial risk assessments?",
      "expected_conclusion_keywords": ["certainty", "risk", "financial"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Moderate certainty based on available security data",
      "requires_multi_hop": true,
      "tests_confidence_calibration": true
    },
    {
      "id": "edge_001",
      "domain": "security",
      "difficulty": "adversarial",
      "question": "What happens if we have a contract with no vulnerabilities, no audit, and no name?",
      "expected_conclusion_keywords": ["unknown", "insufficient", "data"],
      "key_triples": [],
      "expected_reasoning_steps": 2,
      "ground_truth_answer": "Insufficient data to assess such a contract",
      "requires_multi_hop": false,
      "adversarial_note": "Edge case with minimal information",
      "tests_edge_cases": true
    },
    {
      "id": "edge_002",
      "domain": "multi_domain",
      "difficulty": "adversarial",
      "question": "How do we handle contradictory information about contract security?",
      "expected_conclusion_keywords": ["contradiction", "reconcile", "data"],
      "key_triples": [],
      "expected_reasoning_steps": 3,
      "ground_truth_answer": "Should flag contradictions and seek additional verification",
      "requires_multi_hop": true,
      "adversarial_note": "Tests contradiction handling",
      "tests_edge_cases": true
    },
    {
      "id": "reasoning_quality_001",
      "domain": "security",
      "difficulty": "multi_hop",
      "question": "Provide a detailed, step-by-step security analysis of ApolloContract with full justification",
      "expected_conclusion_keywords": ["ApolloContract", "Reentrancy", "vulnerability", "Un-audited", "analysis", "step"],
      "key_triples": ["ApolloContract --has_vulnerability--> Reentrancy"],
      "expected_reasoning_steps": 5,
      "ground_truth_answer": "Step 1: Identify contract. Step 2: Check for vulnerabilities - found Reentrancy. Step 3: Check audit status - unaudited. Step 4: Assess risk - high. Step 5: Recommend mitigation.",
      "requires_multi_hop": true,
      "tests_reasoning_quality": true
    },
    {
      "id": "reasoning_quality_002",
      "domain": "multi_domain",
      "difficulty": "multi_hop",
      "question": "Explain the causal chain from vulnerability discovery to risk mitigation",
      "expected_conclusion_keywords": ["vulnerability", "discovery", "risk", "mitigation", "causal"],
      "key_triples": [],
      "expected_reasoning_steps": 5,
      "ground_truth_answer": "Discovery → Assessment → Prioritization → Audit → Fix → Verification → Risk Reduction",
      "requires_multi_hop": true,
      "tests_reasoning_quality": true
    }
  ]
}
